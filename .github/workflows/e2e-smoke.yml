name: E2E Smoke Test

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  e2e-smoke:
    name: E2E Smoke Test
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: telegram_assistant
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install -r scripts/requirements.txt
      
      - name: Check services
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/telegram_assistant
          REDIS_URL: redis://localhost:6379
        run: |
          bash scripts/check_services.sh || echo "‚ö†Ô∏è Some services may be unavailable"
        continue-on-error: true
      
      - name: Run E2E smoke test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/telegram_assistant
          REDIS_URL: redis://localhost:6379
          QDRANT_URL: ${QDRANT_URL:-http://localhost:6333}
          NEO4J_URI: ${NEO4J_URI:-neo4j://localhost:7687}
          NEO4J_USER: ${NEO4J_USER:-neo4j}
          NEO4J_PASSWORD: ${NEO4J_PASSWORD:-changeme}
          E2E_THRESHOLDS_PATH: config/e2e_thresholds.json
        run: |
          mkdir -p artifacts
          python3 scripts/check_pipeline_e2e.py \
            --mode smoke \
            --thresholds config/e2e_thresholds.json \
            --output artifacts/e2e_smoke.json \
            --junit artifacts/e2e_smoke.xml \
            --json || true
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-smoke-results
          path: |
            artifacts/e2e_smoke.json
            artifacts/e2e_smoke.xml
          retention-days: 7
      
      - name: Display results
        if: always()
        run: |
          if [ -f artifacts/e2e_smoke.json ]; then
            echo "üìä E2E Smoke Test Results:"
            cat artifacts/e2e_smoke.json | python3 -m json.tool | head -50
          fi

