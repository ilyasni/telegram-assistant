# ============================================================================
# TELEGRAM ASSISTANT - ENVIRONMENT CONFIGURATION
# ============================================================================
# Copy this file to .env and fill in your values

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL Database
POSTGRES_USER=telegram_user
POSTGRES_PASSWORD=your_secure_password_here
DATABASE_URL=postgresql+asyncpg://telegram_user:your_secure_password_here@localhost:5432/postgres

# ============================================================================
# REDIS CONFIGURATION
# ============================================================================

REDIS_URL=redis://localhost:6379

# ============================================================================
# PARSER CONFIGURATION
# ============================================================================

# Feature flag для incremental парсинга
FEATURE_INCREMENTAL_PARSING_ENABLED=true

# Режим парсинга: auto (по умолчанию) | historical | incremental
PARSER_MODE_OVERRIDE=auto

# Интервал scheduler (секунды)
PARSER_SCHEDULER_INTERVAL_SEC=300

# Временные окна
PARSER_HISTORICAL_HOURS=24
PARSER_INCREMENTAL_MINUTES=5

# Safeguard: если last_parsed_at старше N часов, форсим historical
PARSER_LPA_MAX_AGE_HOURS=48

# Concurrency and retries
PARSER_MAX_CONCURRENCY=4
PARSER_RETRY_MAX=3

# ============================================================================
# VECTOR AND GRAPH DATABASES
# ============================================================================

# Qdrant Vector Database
QDRANT_URL=http://localhost:6333

# Neo4j Graph Database (unified)
NEO4J_URI=neo4j://neo4j:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=<generated_secure_password>
NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}

# ============================================================================
# AI PROVIDERS (GigaChat PRIMARY!)
# ============================================================================

# GigaChat Authentication (для gpt2giga-proxy)
# Документация: https://developers.sber.ru/docs/ru/gigachat/api/main
# Proxy: https://github.com/ai-forever/gpt2giga
# Credentials получить: https://developers.sber.ru/gigachat
GIGACHAT_CREDENTIALS=your_gigachat_credentials_base64_here
GIGACHAT_SCOPE=GIGACHAT_API_PERS

# gpt2giga Proxy Settings (OpenAI-compatible endpoint)
GIGACHAT_PROXY_HOST=0.0.0.0
GIGACHAT_PROXY_PORT=8090
GIGACHAT_BASE_URL=https://gigachat.devices.sberbank.ru/api/v1
GIGACHAT_MODEL=GigaChat
GIGACHAT_EMBEDDINGS_MODEL=EmbeddingsGigaR
GPT2GIGA_TIMEOUT=600
GPT2GIGA_VERBOSE=False

# OpenAI-compatible URL для подключения из worker/api
OPENAI_API_BASE=http://gpt2giga-proxy:8090/v1
OPENAI_API_KEY=dummy  # gpt2giga игнорирует, использует GIGACHAT_CREDENTIALS

# OpenRouter (FALLBACK, только бесплатные модели)
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENROUTER_MODEL=qwen/qwen-2.5-72b-instruct:free

# ============================================================================
# TELEGRAM CONFIGURATION
# ============================================================================

# Telegram Bot API
TELEGRAM_BOT_TOKEN=your_bot_token_here
TELEGRAM_API_ID=your_api_id_here
TELEGRAM_API_HASH=your_api_hash_here

# ============================================================================
# APPLICATION CONFIGURATION
# ============================================================================

# JWT Secret for API authentication
JWT_SECRET=your_jwt_secret_key_here

# Supabase Keys
ANON_KEY=your_anon_key_here
SERVICE_KEY=your_service_key_here

# Supabase Host
SUPABASE_HOST=produman.studio

# ============================================================================
# CADDY CONFIGURATION
# ============================================================================

# Email для Let's Encrypt (обязательно!)
CADDY_TLS_EMAIL=hello@ilyasni.com

# Basic Auth для Prometheus metrics (опционально, если нужен внешний доступ)
# Сгенерировать: caddy hash-password --plaintext 'your_password'
PROM_BASICAUTH_USER=prometheus
PROM_BASICAUTH_HASH=$2a$14$...

# Database Configuration
POSTGRES_DB=postgres
POSTGRES_PASSWORD=your_secure_password_here

# Tenant ID for multi-tenancy
DEFAULT_TENANT_ID=default-tenant

# ============================================================================
# MONITORING CONFIGURATION
# ============================================================================

# Grafana Admin Password
GRAFANA_PASSWORD=your_grafana_password_here

# ============================================================================
# ENRICHMENT CONFIGURATION
# ============================================================================

# Enrichment Policy Configuration Path
ENRICHMENT_CONFIG_PATH=worker/config/enrichment_policy.yml

# ============================================================================
# DEVELOPMENT CONFIGURATION
# ============================================================================

# Debug Mode
DEBUG=false

# Log Level
LOG_LEVEL=INFO

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# CORS Origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,https://your-domain.com

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100

# ============================================================================
# PERFORMANCE CONFIGURATION
# ============================================================================

# Worker Configuration
WORKER_REPLICAS=2
WORKER_BATCH_SIZE=10
WORKER_TIMEOUT=30

# Database Connection Pool
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30

# Redis Connection Pool
REDIS_POOL_SIZE=10

# ============================================================================
# NEO4J GRAPH DATABASE
# ============================================================================

NEO4J_USER=neo4j
NEO4J_PASSWORD=your_neo4j_password_here
NEO4J_URL=bolt://neo4j:7687

# ============================================================================
# AI PROVIDERS (GigaChat PRIMARY!)
# ============================================================================

# GigaChat (PRIMARY для тегирования и embeddings)
GIGACHAT_API_KEY=your_gigachat_api_key_here
GIGACHAT_CREDENTIALS=your_gigachat_credentials_here

# OpenRouter (FALLBACK, только бесплатные модели)
OPENROUTER_API_KEY=your_openrouter_api_key_here
OPENROUTER_MODEL=qwen/qwen-2.5-72b-instruct:free

# AI Provider Settings
AI_HTTP_TIMEOUT_SEC=30
AI_MAX_RETRIES=3
AI_RETRY_BACKOFF_SEC=5

# ============================================================================
# FEATURE FLAGS
# ============================================================================

# Neo4j GraphRAG
FEATURE_NEO4J_ENABLED=true

# AI Providers (GigaChat primary!)
FEATURE_GIGACHAT_ENABLED=true
FEATURE_OPENROUTER_ENABLED=true

# Crawl4AI Enrichment
FEATURE_CRAWL4AI_ENABLED=true

# ============================================================================
# LOGGING (Production with extended logs)
# ============================================================================

LOG_LEVEL=DEBUG
LOG_FORMAT=json
LOG_STRUCTURED=true

# ============================================================================
# EMBEDDINGS CONFIGURATION
# ============================================================================

# Embedding Model Configuration
EMBEDDING_MODEL=gigachat-embeddings
EMBED_DIM=1536
INDEXER_EMBED_IF_MISSING=true

# ============================================================================
# QDRANT CONFIGURATION (Extended)
# ============================================================================

QDRANT_URL=http://qdrant:6333
QDRANT_COLLECTION=telegram_posts
QDRANT_READ_TIMEOUT_MS=5000
QDRANT_WRITE_TIMEOUT_MS=5000

# ============================================================================
# REDIS STREAMS CONFIGURATION
# ============================================================================

REDIS_URL=redis://redis:6379
REDIS_STREAM_MAXLEN=100000
INDEXING_CONSUMER_GROUP=indexing_workers
INDEXING_MAX_RETRIES=5
INDEXING_BACKOFF_MS=2000
INDEXING_BATCH_SIZE=32
INDEXING_CONCURRENCY=4

# ============================================================================
# DLQ CONFIGURATION
# ============================================================================

DLQ_ENABLED=true
DLQ_MAX_REASON_DETAILS=500

# ============================================================================
# METRICS CONFIGURATION
# ============================================================================

PROMETHEUS_NAMESPACE=telegram_assistant

# ============================================================================
# E2E TESTING CONFIGURATION
# ============================================================================

# E2E Testing Thresholds (override для config/e2e_thresholds.json)
E2E_MAX_WATERMARK_AGE_MIN=30
E2E_MAX_STREAM_PENDING=50
E2E_MIN_POSTS_24H=1
E2E_MAX_EMBED_DIM_MISMATCH=0
E2E_MAX_QDRANT_LAG_MIN=10
E2E_MAX_SKEW_VS_PG_MIN=5
E2E_QDRANT_MIN_PAYLOAD_COVERAGE=0.9

# E2E Testing Configuration
E2E_THRESHOLDS_PATH=config/e2e_thresholds.json
E2E_MODE=e2e

# Prometheus Pushgateway (для отправки метрик E2E)
PROMETHEUS_PUSHGATEWAY_URL=http://pushgateway:9091

# Embedding Dimension (для проверки Qdrant)
EMBEDDING_DIM=2560

# Environment Label (для метрик Pushgateway)
ENV=dev

# ============================================================================
# CONTEXT7 BEST PRACTICES
# ============================================================================

# [C7-ID: ENV-SEC-001] - Secure password generation
# [C7-ID: ENV-SEC-002] - Environment-specific configuration
# [C7-ID: ENV-SEC-003] - Secret management
# [C7-ID: ENV-SEC-004] - Multi-tenant configuration
# [C7-ID: ENV-SEC-005] - Performance tuning parameters
