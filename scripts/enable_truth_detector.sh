#!/bin/bash

# Enable Truth Detector
# =====================
# –í–∫–ª—é—á–∞–µ—Ç –¥–µ—Ç–µ–∫—Ç–æ—Ä –ø—Ä–∞–≤–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ database_save_failed

echo "üïµÔ∏è –í–∫–ª—é—á–µ–Ω–∏–µ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –ø—Ä–∞–≤–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ database_save_failed"
echo "=================================================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å feature flags –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ —Å feature flags..."
    cp env.example .env
fi

# –î–æ–±–∞–≤–ª—è–µ–º feature flags –≤ .env
echo ""
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ feature flags..."

# AUTH_FINALIZE_DB_BYPASS –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ –ø—Ä–æ–±–ª–µ–º—ã
if ! grep -q "AUTH_FINALIZE_DB_BYPASS" .env; then
    echo "AUTH_FINALIZE_DB_BYPASS=on" >> .env
    echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω AUTH_FINALIZE_DB_BYPASS=on"
else
    echo "‚ö†Ô∏è  AUTH_FINALIZE_DB_BYPASS —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ .env"
fi

# AUTH_DETAILED_DIAGNOSTICS –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
if ! grep -q "AUTH_DETAILED_DIAGNOSTICS" .env; then
    echo "AUTH_DETAILED_DIAGNOSTICS=on" >> .env
    echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω AUTH_DETAILED_DIAGNOSTICS=on"
else
    echo "‚ö†Ô∏è  AUTH_DETAILED_DIAGNOSTICS —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ .env"
fi

# AUTH_RETRY_OPERATIONAL_ERRORS –¥–ª—è retry –Ω–∞ —Å–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
if ! grep -q "AUTH_RETRY_OPERATIONAL_ERRORS" .env; then
    echo "AUTH_RETRY_OPERATIONAL_ERRORS=on" >> .env
    echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω AUTH_RETRY_OPERATIONAL_ERRORS=on"
else
    echo "‚ö†Ô∏è  AUTH_RETRY_OPERATIONAL_ERRORS —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ .env"
fi

# AUTH_SOFT_DEGRADATION –¥–ª—è –º—è–≥–∫–æ–π –¥–µ–≥—Ä–∞–¥–∞—Ü–∏–∏
if ! grep -q "AUTH_SOFT_DEGRADATION" .env; then
    echo "AUTH_SOFT_DEGRADATION=on" >> .env
    echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω AUTH_SOFT_DEGRADATION=on"
else
    echo "‚ö†Ô∏è  AUTH_SOFT_DEGRADATION —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ .env"
fi

# AUTH_LOG_SQL_STATEMENTS –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è SQL
if ! grep -q "AUTH_LOG_SQL_STATEMENTS" .env; then
    echo "AUTH_LOG_SQL_STATEMENTS=on" >> .env
    echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω AUTH_LOG_SQL_STATEMENTS=on"
else
    echo "‚ö†Ô∏è  AUTH_LOG_SQL_STATEMENTS —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ .env"
fi

echo ""
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ —Å –Ω–æ–≤—ã–º–∏ feature flags..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º API –∏ telethon-ingest
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞ API –∏ telethon-ingest..."
docker-compose stop api telethon-ingest

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å –Ω–æ–≤—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
echo "   –ó–∞–ø—É—Å–∫ —Å feature flags..."
docker-compose up -d api telethon-ingest

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "   –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose ps api telethon-ingest

echo ""
echo "üß™ –ó–∞–ø—É—Å–∫ –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –ø—Ä–∞–≤–¥—ã..."
python3 scripts/auth_truth_detector.py

echo ""
echo "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
echo "1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ QR –∫–æ–¥"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs api telethon-ingest"
echo "3. –ò—â–∏—Ç–µ —Å—Ç—Ä–æ–∫–∏ —Å 'Auth finalize' –∏ 'correlation_id'"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Ç—Ä–∏–∫–∏: curl http://localhost:8000/metrics | grep auth"
echo ""
echo "üîç –ö–ª—é—á–µ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –ª–æ–≥–∞—Ö:"
echo "   - 'DB_INTEGRITY during session upsert'"
echo "   - 'DB_OPERATIONAL during session upsert'"
echo "   - 'DB_GENERIC during session upsert'"
echo "   - 'NON_DB during session upsert'"
echo "   - 'correlation_id' + 'user_id' + 'session_length'"
echo ""
echo "üéØ –ü–æ—Å–ª–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ feature flags:"
echo "   AUTH_FINALIZE_DB_BYPASS=off"
echo "   AUTH_DETAILED_DIAGNOSTICS=off"
echo "   AUTH_LOG_SQL_STATEMENTS=off"
