version: '3.8'

services:
  # Caddy Reverse Proxy
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - api
      - supabase-studio
    networks:
      - telegram-network
    profiles:
      - core

  # API Service
  api:
    build: ./api
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@supabase-db:5432/postgres
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_ALGORITHM=HS256
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    depends_on:
      - supabase-db
      - redis
    volumes:
      - ./api:/app
    networks:
      - telegram-network
    profiles:
      - core

  # Worker Service
  worker:
    build: ./worker
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@supabase-db:5432/postgres
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    depends_on:
      - supabase-db
      - redis
      - qdrant
    volumes:
      - ./worker:/app
    networks:
      - telegram-network
    profiles:
      - core

  # Telegram Ingest Service
  telethon-ingest:
    build: ./telethon-ingest
    environment:
      - MASTER_API_ID=9602513
      - MASTER_API_HASH=d72f161ad90794db968e19cc24e77efa
      - DATABASE_URL=postgresql://postgres:postgres@supabase-db:5432/postgres
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    depends_on:
      - supabase-db
      - redis
    volumes:
      - ./telethon-ingest:/app
      - ./telethon-sessions:/app/sessions
    networks:
      - telegram-network
    profiles:
      - core

  # Supabase Database
  supabase-db:
    image: postgres:15
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - supabase_data:/var/lib/postgresql/data
      - ./supabase/init:/docker-entrypoint-initdb.d
    # Порт убираем, так как доступ через Caddy
    networks:
      - telegram-network
    profiles:
      - core

  # Supabase Studio
  supabase-studio:
    image: supabase/studio:latest
    environment:
      - SUPABASE_URL=https://supabase.produman.studio
      - SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
    # Порт убираем, так как доступ через Caddy
    networks:
      - telegram-network
    profiles:
      - core

  # Redis Cache
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    # Порт убираем, так как доступ через Caddy
    networks:
      - telegram-network
    profiles:
      - core

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    volumes:
      - qdrant_data:/qdrant/storage
    # Порты убираем, так как доступ через Caddy
    networks:
      - telegram-network
    profiles:
      - core

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/data
    ports:
      - "7474:7474"
      - "7687:7687"
    networks:
      - telegram-network
    profiles:
      - analytics

  # Grafana Monitoring
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - telegram-network
    profiles:
      - analytics

volumes:
  supabase_data:
  redis_data:
  qdrant_data:
  neo4j_data:
  grafana_data:
  caddy_data:
  caddy_config:

networks:
  telegram-network:
    driver: bridge
